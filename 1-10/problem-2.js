console.log(
  '-----\nEach new term in the Fibonacci sequence is generated by adding the previous two terms.\nBy starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n-----\n'
);

let fibonacciCurrent = 1;
let fibonacciArray = new Array();
let fibonacciEvenArray = new Array();

// Setting the first elements of the arrays cause i'm lazy
fibonacciArray[0] = 1;
fibonacciArray[1] = 2;
fibonacciEvenArray[0] = 2;

for (let i = 2; i < 1000; i++) {
  let currentNumber = fibonacciArray[i - 1] + fibonacciArray[i - 2];

  if (currentNumber >= 4000000) {
    console.log(
      `Current number is ${currentNumber}... halting the loop\nFibArray length = ${fibonacciArray.length}\nFibEvenArray length = ${fibonacciEvenArray.length}`
    );

    console.log(`fibonacciEvenArray = ${fibonacciEvenArray}\n`);

    let sumFibonacciEvenNumbers = 0;

    fibonacciEvenArray.map((number) => {
      sumFibonacciEvenNumbers += number;
    });

    return console.log(
      '\x1b[31m%s\x1b[0m',
      'sumFibonacciEvenNumbers = ' + sumFibonacciEvenNumbers
    );
  }

  if (currentNumber % 2 === 0) {
    fibonacciEvenArray.push(currentNumber);
  }

  fibonacciArray[i] = currentNumber;
}
